@using Microsoft.AspNetCore.Identity;
@using System.Text.Json;
@model IEnumerable<Prontuario_do_Paciente_Online.ViewModels.PacientesViewModelHome>;
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var user = await UserManager.GetUserAsync(User);
}

<link rel="stylesheet" type="text/css" href="~/css/site.css">
<style>

    .fixed-width-table {
        width: 1000px;
    }

    .bg-gradient-critico {
        background: linear-gradient(to right, #ff9021, #b26417);
    }

    .bg-gradient-estavel {
        background: linear-gradient(to right, #2cff20, #1a9913);
    }

    .bg-gradient-grave {
        background: linear-gradient(to right, #ff2121, #b21717);
    }

</style>
@if (!User.IsInRole("Acompanhante"))
{
    <body>
        <main class="main-content mt-4 d-flex">
            <div class="row2">
                <div class="card col-md-8 mr-20">
                    <div class="tittle-text m-4">
                        <h3>PACIENTES EM TRATAMENTO</h3>
                    </div>
                    @if (Model.Any())
                    {
                        <div class="table w-100 mb-4 ">
                            <div class="d-flex">
                                <table class="table fixed-width-table align-items-center mb-0">
                                    <thead>
                                        <tr>
                                            <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Nome</th>
                                            <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Diagnostico</th>
                                            <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Ultima Atualização</th>
                                            <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Status</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <td>
                                                    <div class="d-flex px-2 py-1">
                                                        <div class="d-flex flex-column justify-content-center">
                                                            <h6 class="mb-0 text-xs">@item.Paciente.Nome</h6>
                                                            <p class="text-xs text-secondary mb-0  mt-1">@item.Prontuario.Quarto</p>
                                                        </div>
                                                    </div>
                                                </td>

                                                <td>
                                                    <p class="text-xs font-weight-bold mb-0">@item.Prontuario.Diagnostico</p>
                                                </td>

                                                <td class="align-middle text-center">
                                                    <span class="text-secondary text-xs font-weight-bold">@item.Prontuario.DataProntuario</span>
                                                </td>

                                                <td class="align-middle text-center text-sm">
                                                    <span class="badge badge-pill status" id="statusBadge">@item.Prontuario.EnumStatus</span>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                    else
                    {
                        <p>Não existem dados para serem exibidos</p>
                    }
                </div>
                <div class="card col-md-4 p-5 w-26 d-flex">
                    <div class="card-body">
                        <p>Quantidade Pacientes por Status</p>
                        <div class="chart">
                            <canvas id="pie-chart" class="chart-canvas" height="300"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </body>

    <script src="../../assets/js/plugins/chartjs.min.js"></script>
    <canvas id="pie-chart"></canvas>
    <script>
        var statusCounts = @Html.Raw(JsonSerializer.Serialize(ViewBag.StatusCounts));
        var graficoPizza = document.getElementById('pie-chart').getContext("2d");

        new Chart(graficoPizza, {
            type: "doughnut",
            data: {
                labels: Object.keys(statusCounts),
                datasets: [{
                    label: "Status",
                    weight: 9,
                    cutout: 60,
                    tension: 0.9,
                    pointRadius: 2,
                    borderWidth: 2,
                    backgroundColor: ['#ff2121', '#ff9021', '#2cff21'],
                    data: Object.values(statusCounts),
                    fill: false
                }],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false,
                    }
                },
                interaction: {
                    intersect: false,
                    mode: 'index',
                },
                scales: {
                    y: {
                        grid: {
                            drawBorder: false,
                            display: false,
                            drawOnChartArea: false,
                            drawTicks: false,
                        },
                        ticks: {
                            display: false
                        }
                    },
                    x: {
                        grid: {
                            drawBorder: false,
                            display: false,
                            drawOnChartArea: false,
                            drawTicks: false,
                        },
                        ticks: {
                            display: false,
                        }
                    },
                },
            },
        });

        document.addEventListener("DOMContentLoaded", function () {
            var statusElements = document.querySelectorAll(".status");

            statusElements.forEach(function (statusElement) {
                var status = statusElement.innerHTML.trim();

                switch (status) {
                    case "Critico":
                        statusElement.classList.add("bg-gradient-critico");
                        break;
                    case "Grave":
                        statusElement.classList.add("bg-gradient-grave");
                        break;
                    case "Estavel":
                        statusElement.classList.add("bg-gradient-estavel");
                        break;
                    default:
                        break;
                }
            });
        });
    </script>
}
else
{
    <div id="_partialDadosAcompanhante"></div>

}



